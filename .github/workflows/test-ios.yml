name: iOS Native Tests

on:
  push:
    branches:
      - develop
  pull_request:
    branches:
      - develop

jobs:
  unit-test-ios:
    runs-on: macos-latest
    timeout-minutes: 25
    steps:
      - uses: actions/checkout@master

      - name: Check if run is needed
        run: |
          URL="https://api.github.com/repos/${GITHUB_REPOSITORY}/pulls/${{ github.event.pull_request.number }}/files?per_page=100"
          FILES=$(curl -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" -s -X GET -G $URL |  jq -r '.[] | .filename')
          echo "Checking Files: $FILES"
          REGEX="\ios*"
          if echo $FILES | grep -q $REGEX; then
            echo "Detected iOS changes. Running tests!"
            echo "Changed Files:"
            echo $FILES | grep $REGEX
            echo "::set-env name=RUN_TESTS::1"
          else
            echo "No iOS changed detected. Skipping tests."
            echo "::set-env name=RUN_TESTS::0"
          fi

      - name: Set XCode Version
        if: env.RUN_TESTS == 1
        run: sudo xcode-select -s /Applications/Xcode_11.5.app

      - name: Cache node_modules/
        if: env.RUN_TESTS == 1
        uses: actions/cache@v1
        id: cache
        with:
          path: node_modules
          key: ${{ runner.OS }}-yarn-cache-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.OS }}-yarn-cache-

      - name: Install Node Dependencies
        if: env.RUN_TESTS == 1 && steps.cache.outputs.cache-hit != 'true'
        run: yarn --frozen-lockfile

      - name: Cache ruby gems
        if: env.RUN_TESTS == 1
        uses: actions/cache@v1
        with:
          path: ios/vendor/bundle
          key: ${{ runner.os }}-gems-${{ hashFiles('**/Gemfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-gems-

      - name: Install ruby gems (including Cocoapods)
        if: env.RUN_TESTS == 1
        run: |
          bundle config path vendor/bundle
          bundle install --jobs 4 --retry 3
        working-directory: ./ios

      - name: Install Pods
        if: env.RUN_TESTS == 1
        run: pod install --repo-update
        working-directory: ./ios

      - name: Run iOS Tests
        if: env.RUN_TESTS == 1
        run: |
          xcodebuild test -workspace COVIDSafePaths.xcworkspace \
            -scheme GPS_Development \
            -destination 'platform=iOS Simulator,name=iPhone 8' \
        working-directory: ./ios
